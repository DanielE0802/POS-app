{"version":3,"sources":["components/authentication/register/RegisterForm.js","pages/authentication/Register.js"],"names":["RegisterForm","register","useAuth","isMountedRef","useIsMountedRef","useSnackbar","enqueueSnackbar","closeSnackbar","useState","showPassword","setShowPassword","RegisterSchema","Yup","shape","firstName","min","max","required","lastName","email","password","formik","useFormik","initialValues","validationSchema","onSubmit","values","a","setErrors","setSubmitting","variant","action","key","size","onClick","icon","closeFill","current","console","error","afterSubmit","message","errors","touched","handleSubmit","isSubmitting","getFieldProps","value","autoComplete","noValidate","Stack","spacing","Alert","severity","direction","xs","sm","TextField","fullWidth","label","Boolean","helperText","type","InputProps","endAdornment","InputAdornment","position","IconButton","edge","prev","eyeFill","eyeOffFill","LoadingButton","loading","RootStyle","styled","Page","theme","breakpoints","up","display","SectionStyle","Card","width","maxWidth","flexDirection","justifyContent","margin","ContentStyle","minHeight","padding","Register","method","title","AuthLayout","Link","underline","component","RouterLink","to","Typography","sx","px","mt","mb","alt","src","Container","Box","alignItems","flexGrow","gutterBottom","color","Tooltip","capitalCase","height","AuthFirebaseSocial","align","href","textAlign","PATH_AUTH","login"],"mappings":"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","file":"static/js/57.750f4d1a.chunk.js","sourcesContent":["import * as Yup from 'yup';\nimport { useState } from 'react';\nimport { Icon } from '@iconify/react';\nimport { useSnackbar } from 'notistack5';\nimport { useFormik, Form, FormikProvider } from 'formik';\nimport eyeFill from '@iconify/icons-eva/eye-fill';\nimport closeFill from '@iconify/icons-eva/close-fill';\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\n// material\nimport { Stack, TextField, IconButton, InputAdornment, Alert } from '@material-ui/core';\nimport { LoadingButton } from '@material-ui/lab';\n// hooks\nimport useAuth from '../../../hooks/useAuth';\nimport useIsMountedRef from '../../../hooks/useIsMountedRef';\n//\nimport { MIconButton } from '../../@material-extend';\n\n// ----------------------------------------------------------------------\n\nexport default function RegisterForm() {\n  const { register } = useAuth();\n  const isMountedRef = useIsMountedRef();\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const RegisterSchema = Yup.object().shape({\n    firstName: Yup.string()\n      .min(3, 'Ingrese un nombre valido')\n      .max(50, 'Ingrese un nombre valido')\n      .required('Ingrese el nombre'),\n    lastName: Yup.string()\n      .min(3, 'Ingrese un apellido valido')\n      .max(50, 'Ingrese un apellido más corto')\n      .required('Ingrese el apellido'),\n    email: Yup.string().email('Ingrese un correo valido').required('Correo es requerido'),\n    password: Yup.string().required('La contraseña es requerida')\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: ''\n    },\n    validationSchema: RegisterSchema,\n    onSubmit: async (values, { setErrors, setSubmitting }) => {\n      try {\n        await register(values.email, values.password, values.firstName, values.lastName);\n        enqueueSnackbar('Register success', {\n          variant: 'success',\n          action: (key) => (\n            <MIconButton size=\"small\" onClick={() => closeSnackbar(key)}>\n              <Icon icon={closeFill} />\n            </MIconButton>\n          )\n        });\n        if (isMountedRef.current) {\n          setSubmitting(false);\n        }\n      } catch (error) {\n        console.error(error);\n        if (isMountedRef.current) {\n          setErrors({ afterSubmit: error.message });\n          setSubmitting(false);\n        }\n      }\n    }\n  });\n\n  const { errors, touched, handleSubmit, isSubmitting, getFieldProps } = formik;\n\n  return (\n    <FormikProvider value={formik}>\n      <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\n        <Stack spacing={3}>\n          {errors.afterSubmit && <Alert severity=\"error\">{errors.afterSubmit}</Alert>}\n\n          <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2}>\n            <TextField\n              fullWidth\n              label=\"Nombre\"\n              {...getFieldProps('firstName')}\n              error={Boolean(touched.firstName && errors.firstName)}\n              helperText={touched.firstName && errors.firstName}\n            />\n\n            <TextField\n              fullWidth\n              label=\"Apellido\"\n              {...getFieldProps('lastName')}\n              error={Boolean(touched.lastName && errors.lastName)}\n              helperText={touched.lastName && errors.lastName}\n            />\n          </Stack>\n\n          <TextField\n            fullWidth\n            autoComplete=\"username\"\n            type=\"email\"\n            label=\"Correo electrónico\"\n            {...getFieldProps('email')}\n            error={Boolean(touched.email && errors.email)}\n            helperText={touched.email && errors.email}\n          />\n\n          <TextField\n            fullWidth\n            autoComplete=\"current-password\"\n            type={showPassword ? 'text' : 'password'}\n            label=\"Contraseña\"\n            {...getFieldProps('password')}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton edge=\"end\" onClick={() => setShowPassword((prev) => !prev)}>\n                    <Icon icon={showPassword ? eyeFill : eyeOffFill} />\n                  </IconButton>\n                </InputAdornment>\n              )\n            }}\n            error={Boolean(touched.password && errors.password)}\n            helperText={touched.password && errors.password}\n          />\n\n          <LoadingButton fullWidth size=\"large\" type=\"submit\" variant=\"contained\" loading={isSubmitting}>\n            Registrarse\n          </LoadingButton>\n        </Stack>\n      </Form>\n    </FormikProvider>\n  );\n}\n","import { capitalCase } from 'change-case';\nimport { Link as RouterLink } from 'react-router-dom';\n// material\nimport { styled } from '@material-ui/core/styles';\nimport { Box, Card, Link, Container, Typography, Tooltip } from '@material-ui/core';\n// hooks\nimport useAuth from '../../hooks/useAuth';\n// routes\nimport { PATH_AUTH } from '../../routes/paths';\n// layouts\nimport AuthLayout from '../../layouts/AuthLayout';\n// components\nimport Page from '../../components/Page';\nimport { MHidden } from '../../components/@material-extend';\nimport { RegisterForm } from '../../components/authentication/register';\nimport AuthFirebaseSocials from '../../components/authentication/AuthFirebaseSocial';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(Page)(({ theme }) => ({\n  [theme.breakpoints.up('md')]: {\n    display: 'flex'\n  }\n}));\n\nconst SectionStyle = styled(Card)(({ theme }) => ({\n  width: '100%',\n  maxWidth: 464,\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  margin: theme.spacing(2, 0, 2, 2)\n}));\n\nconst ContentStyle = styled('div')(({ theme }) => ({\n  maxWidth: 480,\n  margin: 'auto',\n  display: 'flex',\n  minHeight: '100vh',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  padding: theme.spacing(12, 0)\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function Register() {\n  const { method } = useAuth();\n\n  return (\n    <RootStyle title=\"Register\">\n      <AuthLayout>\n        ¿Ya tienes cuenta? &nbsp;\n        <Link underline=\"none\" variant=\"subtitle2\" component={RouterLink} to=\"/\">\n          Iniciar sesión\n        </Link>\n      </AuthLayout>\n\n      <MHidden width=\"mdDown\">\n        <SectionStyle>\n          <Typography variant=\"h3\" sx={{ px: 5, mt: 10, mb: 5 }}>\n            Sistema de Contabilidad y POS para impulsar tu negocio\n          </Typography>\n          <img alt=\"register\" src=\"/static/illustrations/illustration_register.png\" />\n        </SectionStyle>\n      </MHidden>\n\n      <Container>\n        <ContentStyle>\n          <Box sx={{ mb: 5, display: 'flex', alignItems: 'center' }}>\n            <Box sx={{ flexGrow: 1 }}>\n              <Typography variant=\"h4\" gutterBottom>\n                Comience completamente gratis\n              </Typography>\n              <Typography sx={{ color: 'text.secondary' }}>No necesita tarjeta de credito</Typography>\n            </Box>\n            <Tooltip title={capitalCase(method)}>\n              <Box component=\"img\" src={`/static/auth/ic_${method}.png`} sx={{ width: 32, height: 32 }} />\n            </Tooltip>\n          </Box>\n\n          {method === 'firebase' && <AuthFirebaseSocials />}\n\n          <RegisterForm />\n\n          <Typography variant=\"body2\" align=\"center\" sx={{ color: 'text.secondary', mt: 3 }}>\n            Al registrarse aceptas terminos y condiciones. Por favor lea nuestros&nbsp;\n            <Link underline=\"always\" color=\"text.primary\" href=\"#\">\n              Terminos y condiciones\n            </Link>\n            &nbsp;y&nbsp;\n            <Link underline=\"always\" color=\"text.primary\" href=\"#\">\n              Politica de privacidad\n            </Link>\n            .\n          </Typography>\n\n          <MHidden width=\"smUp\">\n            <Typography variant=\"subtitle2\" sx={{ mt: 3, textAlign: 'center' }}>\n              ¿Ya tienes cuenta?&nbsp;\n              <Link to={PATH_AUTH.login} component={RouterLink}>\n                Iniciar sesión\n              </Link>\n            </Typography>\n          </MHidden>\n        </ContentStyle>\n      </Container>\n    </RootStyle>\n  );\n}\n"],"sourceRoot":""}